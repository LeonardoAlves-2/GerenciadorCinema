// <auto-generated />
using System;
using GerenciadorDeCinema.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GerenciadorDeCinema.Infraestrutura.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20220118195103_NovaMigration")]
    partial class NovaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GerenciadorDeCinema.Dominio.Entidades.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("GerenciadorDeCinema.Dominio.Entidades.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeDeAssentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sala");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c488fe5-21db-4e80-8fcf-fa27ff5a77aa"),
                            Nome = "Sala 1",
                            QuantidadeDeAssentos = 40
                        },
                        new
                        {
                            Id = new Guid("4fc0407c-9bac-4270-9399-4895f601303b"),
                            Nome = "Sala 2",
                            QuantidadeDeAssentos = 50
                        },
                        new
                        {
                            Id = new Guid("4fa5492a-494c-44f8-bef0-711e17a7e3a7"),
                            Nome = "Sala 3",
                            QuantidadeDeAssentos = 60
                        });
                });

            modelBuilder.Entity("GerenciadorDeCinema.Dominio.Entidades.Sessao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Animacao")
                        .HasColumnType("int");

                    b.Property<int>("Audio")
                        .HasColumnType("int");

                    b.Property<Guid>("FilmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorIngresso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sessao");
                });

            modelBuilder.Entity("GerenciadorDeCinema.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50b661fc-356c-43a1-aff7-ce82c07c24ff"),
                            Email = "admin@cinema.com",
                            Senha = "admin43"
                        });
                });

            modelBuilder.Entity("GerenciadorDeCinema.Dominio.Entidades.Sessao", b =>
                {
                    b.HasOne("GerenciadorDeCinema.Dominio.Entidades.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeCinema.Dominio.Entidades.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
